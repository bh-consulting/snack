#!/bin/bash

if [ $# -ne '2' ]
then
	echo "Usage: restore commitNumber nas"
	exit
fi

TFTP_FOLDER=/home/snack/backups.git
IP=$(awk -F \' '/ipAddress/ {print $4}'\
    ~snack/interface/app/Config/parameters.php)
RAND=$((RANDOM%200))


function extract_db() {
    awk -F \' "/$1.*=>.*'/ {print \$4}"\
	~snack/interface/app/Config/database.php | head -n1
}
function restore(){
	
	(cd $TFTP_FOLDER;
	git show $1:$2 >  $2.tftp)
	# https://supportforums.cisco.com/docs/DOC-1860
	snmpset -v 2c -c private $2 \
	.1.3.6.1.4.1.9.9.96.1.1.1.1.2.$RAND i 1 \
	.1.3.6.1.4.1.9.9.96.1.1.1.1.3.$RAND i 1 \
	.1.3.6.1.4.1.9.9.96.1.1.1.1.4.$RAND i 3 \
	.1.3.6.1.4.1.9.9.96.1.1.1.1.5.$RAND a $IP \
	.1.3.6.1.4.1.9.9.96.1.1.1.1.6.$RAND s "$2.tftp" \
	.1.3.6.1.4.1.9.9.96.1.1.1.1.14.$RAND i 4
}



db_login=$(extract_db login)
db_password=$(extract_db password)
db_name=$(extract_db database)
db_host=$(extract_db host)
db_prefix=$(extract_db prefix)


read sql_sessionusers <<SQL
    SELECT DISTINCT username\\
    FROM ${db_prefix}radacct\\
    WHERE acctstoptime IS NULL\\
    ORDER BY radacctid\\
SQL

users=$(/usr/bin/mysql -B -h $db_host -u $db_login -p$db_password $db_name\
        -e "$sql_sessionusers" | tail -n+2  | paste -sd ,)
export NAS_IP_ADDRESS=$2
export USER_NAME=$users
echo "setting users" >> /tmp/trape
export ACCT_STATUS_TYPE=Restore
export RESTORE_VALUE=$1

#check that no process is already backuping or restoring
while test -e $TFTP_FOLDER/$NAS_IP_ADDRESS.pid
do
    sleep 1
done

#now, my turn 
echo $$ > $TFTP_FOLDER/$NAS_IP_ADDRESS.pid

#lanch backups
~snack/scripts/backup_create.sh

trap "restore $1 $2 ; exit 0" USR1
#wait the end of the backups
while true
do
	sleep 1
done

exit 0
