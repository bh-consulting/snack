#!/bin/bash
PAQUETNAME=snack

#Cleaning the stdin buffer
read -t 1 -n 10000 discard





if [ 'root' != $USER ]
    then
    echo "This install script must be launched with sudo right";
    exit
fi

# Création de la base de donnée + création d'un utilisateur admin

#echo -n "Mot de passe root MySQL : "
stty -echo 
read -t 1 -n 10000 discard
read -p "Enter MySQL root password : " mdp_root
stty echo
echo ""

#echo -n "Mot de passe de l'administrateur : "
while [ -z "$mdp_radius" -o $mdp_radius != $mdp_radius_bis ] 
do
    if [ -n "$mdp_radius" ]
    then
	echo "Password not corresponding! "
    fi
    stty -echo
    read -p "Enter administrator password : " mdp_radius
    stty echo
    echo ""
    stty -echo
    
    read -p "Re enter administrator password : " mdp_radius_bis
    stty echo
    echo ""
done

echo "	create database radius;\
	grant all on radius.* to radius@localhost identified by '$mdp_radius';\
	flush privileges;\
" | mysql -uroot -p$mdp_root

until [ $? -eq 0 ]
do
	#echo -n "Mot de passe root MySQL : "
	stty -echo
	read -t 1 -n 10000 discard
	read -p "Mot de passe root MySQL : " mdp_root
	stty echo
	

	echo "	create database radius;\
		grant all on radius.* to radius@localhost identified by '$mdp_radius';\
		flush privileges;\
	" | mysql -uroot -p$mdp_root
	
done


mysql -uroot -p$mdp_root radius < /etc/freeradius/sql/mysql/schema.sql
mysql -uroot -p$mdp_root radius < /etc/freeradius/sql/mysql/nas.sql

echo "INSERT INTO radcheck(UserName, Attribute, op, Value) VALUES ('admin', 'Cleartext-Password', ':=', '$mdp_radius');" | mysql -uroot -p$mdp_root radius

# Configuration de Radius pour intéragir avec la base de donnée

sed\
	-e "s/radpass/$mdp_radius/"\
	-e "s/#\(readclients\)/\1/"\
	-i /etc/freeradius/sql.conf

sed\
	-e 's/#\(\s*\$INCLUDE sql\.conf\)/\1/'\
	-e 's/#\(\s*\$INCLUDE sql\/mysql\/counter.conf\)/\1/'\
	-e 'N; s/\(#\s*clients\s*=\s*per_socket_clients.*\)\(}\)/\1\tvirtual_server = bh.consulting.net\n\2/'\
	-e 's/\(\$INCLUDE clients\.conf\)/#\1/'\
	-i /etc/freeradius/radiusd.conf

#Certificats


#CAplPATH=/usr/lib/ssl/misc
#Guess the home path; 
if [ -n "$SUDO_USER" ];
    then
	USER_HOME=/home/$SUDO_USER
	echo "using sudo_user value"
elif [ -d "/home/tech" ]
    then
	USER_HOME=/home/tech
	echo "using /home/tech"
else
	USER_HOME=$HOME
	echo "using home"
fi


CAplPATH=install/files/usr/lib/ssl/misc
DESTROOTPATH=$USER_HOME/$PAQUETNAME
DESTFOLDER=cert
DESTPATH=$DESTROOTPATH/$DESTFOLDER
SSLCNF=/etc/ssl/openssl.cnf
RADCERTVALIDITY=3650 #ten years
CACERTVALIDITY=3650 #ten years
PATHDIRMODE=0070
ONLYRADIUSACCESS=0700
INTERFACEACCESS=0770 #data-www must be able to read certificate and to generate them.
INTERFACETHROUGH=0710

INTERFACEUSER=www-data
ONLYINTERFACEACCESS=0700


CAKEY=cakey.pem
CAREQ=careq.pem
CACERT=cacert.pem

RADIUSKEY=radius_key.pem
RADIUSREQ=radius_req.pem
RADIUSCERT=radius_cert.pem

EAPCONF=/etc/freeradius/eap.conf

############################################
#Get the name of the client firm

read -t 1 -n 10000 discard
read -p "Enter the name of the client (CA common name): " CLIENTNAME


############################################
#Modification of the configuration openssl.cnf
sed\
	-e "s|./demoCA|$DESTPATH|"\
	-e "/\s*certificate\s*=/c certificate = \$dir/private/cacert.pem\t"\
#	-e '/countryName_default/c countryName_default		= FR'\
#	-e '/stateOrProvinceName_default/c stateOrProvinceName_default	= France'\
	-i $SSLCNF
#if grep -qs "localityName_default" $SSLCNF 
#then
#	sed\
#		-e '/localityName_default/c localityName_default		= Nancy'\
#		-i $SSLCNF
#else
#	sed\
#		-e '/Locality Name/a localityName_default		= Nancy'\
#		-i $SSLCNF
#fi
#sed\
#	-e '/0.organizationName_default/c 0.organizationName_default	= BHConsulting'\
#	-i $SSLCNF
#


############################################
#Creation of the needed repertories

if test ! -d $DESTROOTPATH
then
	mkdir -p $DESTROOTPATH -m $PATHDIRMODE
fi

mkdir $DESTPATH -m $INTERFACETHROUGH;
#chown freerad $DESTPATH
mkdir "${DESTPATH}/certs" -m $ONLYRADIUSACCESS;
#chown freerad $DESTPATH/certs
mkdir "${DESTPATH}/crl" -m $INTERFACEACCESS ;
#chown freerad $DESTPATH/crl
mkdir "${DESTPATH}/newcerts" -m $INTERFACEACCESS;
#chown freerad $DESTPATH/newcerts
mkdir "${DESTPATH}/private" -m $ONLYRADIUSACCESS;
#chown freerad $DESTPATH/private
mkdir "${DESTPATH}/users" -m $INTERFACEACCESS;
#chown freerad $DESTPATH/users
touch $DESTPATH/index.txt
echo "01" > $DESTPATH/crlnumber
chown freerad $DESTPATH/index.txt
chmod $ONLYRADIUSACCESS $DESTPATH/index.txt

############################################
#Creation of the Authority Certificate (CA)

#openssl req -config /etc/ssl/openssl.cnf -new -keyout $DESTPATH/private/$CAKEY -out $DESTPATH/$CAREQ

openssl genrsa -out $DESTPATH/private/$CAKEY 4096 

openssl req -new -key $DESTPATH/private/$CAKEY \
	-subj /countryName=FR/stateOrProvinceName=France/localityName=Nancy/organizationName=BHConsulting/commonName=$CLIENTNAME/ \
	-out $DESTPATH/$CAREQ


openssl ca -config /etc/ssl/openssl.cnf \
	-create_serial -out $DESTPATH/private/$CACERT -days $CACERTVALIDITY -batch \
	-keyfile $DESTPATH/private/$CAKEY -selfsign \
	-extensions v3_ca \
	-infiles $DESTPATH/$CAREQ


#This instruction is replaced by the tree above instructions.
#$CAplPATH/CA.pl -newca

#Even the radius should not acces the cakey file. 
chown freerad $DESTPATH/private/$CACERT
chmod $ONLYRADIUSACCESS $DESTPATH/private/$CACERT




############################################
#Creation of the radius certificate
openssl genrsa -out $DESTPATH/private/$RADIUSKEY 4096

openssl req -config /etc/ssl/openssl.cnf -new -key $DESTPATH/private/$RADIUSKEY \
	-subj /countryName=FR/stateOrProvinceName=France/localityName=Nancy/organizationName=BHConsulting/commonName=`hostname`/ \
	-out $DESTPATH/private/$RADIUSREQ -days $RADCERTVALIDITY
openssl ca -config /etc/ssl/openssl.cnf -policy policy_anything -out $DESTPATH/private/$RADIUSCERT -batch -infiles $DESTPATH/private/$RADIUSREQ

chown freerad $DESTPATH/private/$RADIUSKEY
chown freerad $DESTPATH/private/$RADIUSCERT
chmod $ONLYRADIUSACCESS $DESTPATH/private/$RADIUSKEY
chmod $ONLYRADIUSACCESS $DESTPATH/private/$RADIUSCERT


############################################
#First CRL Generation and link to permit revocation verifications

openssl ca -config /etc/ssl/openssl.cnf -gencrl -out $DESTPATH/crl/crl.pem

HASH=`openssl x509 -noout -hash -in $DESTPATH/private/$CACERT`
ln -s $DESTPATH/private/$CACERT $DESTPATH/certs/$HASH.0
ln -s $DESTPATH/crl/crl.pem $DESTPATH/certs/$HASH.r0

chown freerad $DESTPATH/certs/$HASH.0
chown freerad $DESTPATH/certs/$HAST.r0
chmod $ONLYRADIUSACCESS $DESTPATH/certs/$HASH.0
chmod $ONLYRADIUSACCESS $DESTPATH/certs/$HASH.r0

chown freerad $DESTPATH/crl/crl.pem
chmod $INTERFACEACCESS $DESTPATH/crl/crl.pem

############################################
#Now, we configure the radius.

#First, we must create those two file.
dd if=/dev/urandom of=$DESTPATH/random count=2
openssl dhparam -check -text -5 1024 -out $DESTPATH/dh

chown freerad $DESTPATH/random
chown freerad $DESTPATH/dh
chmod $ONLYRADIUSACCESS $DESTPATH/random
chmod $ONLYRADIUSACCESS $DESTPATH/dh
#Then we change the eap.conf file

#changes for TLS section
sed\
        -e "/certdir =/i \\\t\t\tconfdir = $DESTPATH"\
        -e "/certdir =/c \\\t\t\tcertdir = \${confdir}"\
        -e "/cadir =/c \\\t\t\tcadir = \${confdir}/private"\
        -e "/private_key_password =/c \\\t\t\tprivate_key_password ="\
        -e "/private_key_file =/c \\\t\t\tprivate_key_file = \${cadir}/$RADIUSKEY"\
        -e "/^\s*certificate_file =/c \\\t\t\tcertificate_file = \${cadir}/$RADIUSCERT"\
        -e "/^\s*CA_file =/c \\\t\t\tCA_file = \${cadir}/$CACERT"\
        -e "/dh_file =/c \\\t\t\tdh_file = \${certdir}/dh"\
        -e "/check_crl =/c \\\t\t\tcheck_crl = yes"\
        -e "/^\s*#*CA_path =/c \\\t\t\tCA_path = \${certdir}/certs"\
        -e "/^\s*#*\s*check_cert_cn =/c \\\t\t\tcheck_cert_cn = %{User-Name}"\
        -i $EAPCONF




#copy scripts version
sed -e "s|USER_HOME_TO_SED|$USER_HOME|"\
    -i scripts/createCertificate

sed -e "s|USER_HOME_TO_SED|$USER_HOME|"\
    -i scripts/revokeClient

sed -e "s|USER_HOME_TO_SED|$USER_HOME|"\
    -i scripts/revocationCheck

mkdir $USER_HOME/$PAQUETNAME/scripts -m $ONLYINTERFACEACCESS
cp -r scripts/* $USER_HOME/$PAQUETNAME/scripts
#chmod +x $USER_HOME/$PAQUETNAME/scripts/createCertificate
#chmod +x $USER_HOME/$PAQUETNAME/scripts/revokeClient
#chmod +x $USER_HOME/$PAQUETNAME/scripts/revocationCheck
chown -R $INTERFACEUSER $USER_HOME/$PAQUETNAME/scripts
chmod -R $ONLYINTERFACEACCESS $USER_HOME/$PAQUETNAME/scripts

groupadd snack
usermod -a -G snack freerad
usermod -a -G snack www-data
chown -R :snack $USER_HOME/$PAQUETNAME

exit 0
